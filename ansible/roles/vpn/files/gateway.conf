# copied from https://raw.githubusercontent.com/OpenVPN/openvpn/master/sample/sample-config-files/server.conf

port 443
proto tcp

dev tun1

ca /etc/pki/ca-trust/source/anchors/stderr-ca.crt
cert /etc/openvpn/server/gateway.crt
key /etc/openvpn/server/gateway.key

# Diffie hellman parameters.
# Generate your own with:
#   openssl dhparam -out dh2048.pem 2048
dh /etc/openvpn/server/dh2048.pem

topology subnet
server 172.30.1.0 255.255.255.0

ifconfig-pool-persist ipp.txt

# push libvirt ocpext0 network route to client
push "route 172.16.100.0 255.255.255.0"

# route dns traffic to bastion host
# this tells systemd-resolvd to use a specific DNS server
# for the specified domain
push "dhcp-option DNS 172.16.100.2"
push "dhcp-option DOMAIN ocp1.playground.stderr.at"

# To assign specific IP addresses to specific
# clients or if a connecting client has a private
# subnet behind it that should also have VPN access,
# use the subdirectory "ccd" for client-specific
# configuration files (see man page for more info).

# EXAMPLE: Suppose the client
# having the certificate common name "Thelonious"
# also has a small subnet behind his connecting
# machine, such as 192.168.40.128/255.255.255.248.
# First, uncomment out these lines:
;client-config-dir ccd
;route 192.168.40.128 255.255.255.248
# Then create a file ccd/Thelonious with this line:
#   iroute 192.168.40.128 255.255.255.248
# This will allow Thelonious' private subnet to
# access the VPN.  This example will only work
# if you are routing, not bridging, i.e. you are
# using "dev tun" and "server" directives.

# EXAMPLE: Suppose you want to give
# Thelonious a fixed VPN IP address of 10.9.0.1.
# First uncomment out these lines:
;client-config-dir ccd
;route 10.9.0.0 255.255.255.252
# Then add this line to ccd/Thelonious:
#   ifconfig-push 10.9.0.1 10.9.0.2

client-to-client

keepalive 10 120

# For extra security beyond that provided
# by SSL/TLS, create an "HMAC firewall"
# to help block DoS attacks and UDP port flooding.
#
# Generate with:
#   openvpn --genkey tls-auth ta.key
#
# The server and each client must have
# a copy of this key.
# The second parameter should be '0'
# on the server and '1' on the clients.
# tls-auth ta.key 0 # This file is secret

cipher AES-256-CBC

compress lz4-v2
push "compress lz4-v2"
max-clients 10

user nobody
group nobody

persist-key
persist-tun

status openvpn-status.log

# Set the appropriate level of log
# file verbosity.
#
# 0 is silent, except for fatal errors
# 4 is reasonable for general usage
# 5 and 6 can help to debug connection problems
# 9 is extremely verbose
verb 4

# Silence repeating messages.  At most 20
# sequential messages of the same message
# category will be output to the log.
mute 20

# Notify the client that when the server restarts so it
# can automatically reconnect.
# only supported with udp
# explicit-exit-notify 1
